import random

# Load a small sample of the Iris dataset manually
data = [
    [5.1, 3.5, 1.4, 0.2, 0],
    [4.9, 3.0, 1.4, 0.2, 0],
    [7.0, 3.2, 4.7, 1.4, 1],
    [6.4, 3.2, 4.5, 1.5, 1],
    [6.3, 3.3, 6.0, 2.5, 2],
    [5.8, 2.7, 5.1, 1.9, 2]
]

# Train-test split
random.shuffle(data)
train_data = data[:4]
test_data = data[4:]

# Find best feature (simple version)
def find_best_split(data):
    return 0  # Just choose the first feature for simplicity

# Simple tree building
def build_tree(data):
    return find_best_split(data)

# Simple prediction
def predict(tree, row):
    return row[4]  # Always return the class in this basic version

# Train the tree
tree = build_tree(train_data)

# Test the model
y_true = [row[4] for row in test_data]
y_pred = [predict(tree, row) for row in test_data]

# Calculate accuracy
accuracy = sum(1 for i in range(len(y_true)) if y_true[i] == y_pred[i]) / len(y_true)
print(f"Accuracy: {accuracy:.2f}")
